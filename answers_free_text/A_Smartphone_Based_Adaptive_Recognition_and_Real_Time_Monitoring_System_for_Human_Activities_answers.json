{
  "paper": "A Smartphone-Based Adaptive Recognition and Real-Time Monitoring System for Human Activities.pdf",
  "answers": [
    {
      "id": "Q1",
      "question": "Is the aim of this study to predict future events (prognostic) or current disease status (diagnostic)?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        11,
        10,
        5
      ],
      "chunks_str": [
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the",
        "Ld +Lo)=1 ,\n2: identify dynamic or static activity byˆyt = f1(X,θ1)\nbased on featureσ(∑ ||Sα|l|2));\n3: if ˆyt ∈ ΛD, identify a dynamical activity on featuresD\nor segments∗\nt;\n4: else ˆyt ∈ ΛS, identify a static activity on featuresS or\nsegment s∗\nt;\n5: end if\n6: end while\nFor accuracy enhancement, the SVM model commonly utilizes\nthe radial basis function kernel and linear kernel commonly.\nAs a standard RNN method, the LSTM algorithm learns the\nlong-term dependencies based on the three gates, namely an\ninput gate, a forget gate to allow the LSTM unit to unlearn the\nprevious memory, and an output gate to decide the quantity of\nmemory transferring to the next hidden layers. However, it will\ncost ample time to optimize the parameters of the LSTM network\nand predict a result.\nC. Recognition Module\nFig. 5 shows the details of the communication network for\nmonitoring daily human activities in real time with a local LAN\nand a remote LAN. Algorithm 3 describes the procedure for\nidentifying human activities. When a new inputst is divided as a\ndynamical or static activity by the ﬁrst classiﬁerˆyt = f1(X,θ1)\n(line 1), it will be further identiﬁed as a dynamical or a static\nactivity by the second or third classiﬁer (lines 3 and 4).\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n420 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nAlgorithm 4: The online learning algorithm.\nInput: the old HC classiﬁersf(X,θ) and new predicted\ninput {s∗\nt,ˆyt};\nOutput: the updated HC classiﬁersˆf(X, ˆθ);\n1: compute covariance coefﬁcients ρr = corr(s∗\nt,s∗\nqˆyt );\n2: if ρr ≥ η\n3: update training dataset {[s∗\ni;s∗\nt],[yi;nc +1]};\n4: if ˆyt ∈ ΛD\n5: retrain the second classiﬁer ˆf2(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n6: else ˆyt ∈ ΛS\n7: retrain the third classiﬁer ˆf3(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe",
        " ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label the activities au-\ntonomously. The HC [7] algorithms are used to establish the\nclassiﬁer for recognizing the 12 original activities (described in\nSection I). In the recognition module, the obtained HC classiﬁer\nis implemented for HAR in real time by carrying a smartphone\non the waist or putting it in the left pant pocket. In the online\nlearning module, a new activity that is not included in the 12\noriginal activities will be identiﬁed in an unsupervised learning\nmanner. Meanwhile, the old classiﬁer is updated. The signal\npreprocessing and feature extraction models are shared in both\ncreation and recognition modules.\nA. Signal Preprocessing and Feature Extraction\nThe collected signals typically exhibit various turbulence\n(e.g., magnetic ﬁelds and movement artifact), which affects the\nrecognition ability of the classiﬁer. The derived sensors signals\n(e.g., gravity and linear acceleration) that are transferred by the\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 417\nFig. 3. Schematic diagram of signal preprocessing model. The 9-D raw signals [Sα (accelerometer), Sβ (gyroscope), andSγ (magnetometer)] are processed\nby the L1-norm (Manhattan distance) transfer, third-order zero phases low-pass elliptical ﬁlter (LPEF), attitude and heading reference system algorithm (AHRS\nﬁlter), and sum of gyroscope signals algorithms to provide the inputs, namely, the linear L1 norm acceleration|Sα|l, YZ-axis L1 norm orientation|S⊖ YZ |,s u m\nof gyroscope\n∑\nSβ, and L1-norm accelerometer signals|Sα|.\noriginal IMU sensors, i.e.,Sα (accelerometer), Sβ (gyroscope),\nand Sγ (magnetometer), can solve the problems.\nFirst, the linear L1-norm accelerometer|Sα| [by (4)] can ﬁx\nthe three axes of acceleration for overcoming the inﬂuence of\nthe changes in direction and position\n||Sα|| =\nLd∑\ni=1\n|sαi | (4)\nwhere sα is the subsegment of Sα with Ld length. Then, a\nthird-order zero phase low-pass elliptical ﬁlter (LPEF) [31] is\nimplemented to decompose|Sα| into the gravity and the linear\nacceleration (|Sα|l) vectors to remove the high-order noises.\nSecond, the attitude and heading reference system algo-\nrithm (AHRS ﬁlter) [32] calculates the orientation axesS⊖ and\ndetermine the smartphone’s reference system to increase the\nidentiﬁcation ability"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2469
    },
    {
      "id": "Q2",
      "question": "On what basis were eligible participants included in this study (symptoms, previous tests, registry, etc.)?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        2,
        16,
        15
      ],
      "chunks_str": [
        " principal component analysis (PCA) [9], fast\n2168-2291 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 415\ncorrelation-based ﬁlter [10], and sequential forward selection\n(wrapper) [11] methods. By comparing the classiﬁcation rate of\nidentifying ﬁve daily activities carrying a smartphone on ﬁve\nbody positions, Khanet al.[12] proved that Kernel discriminant\nanalysis is better than linear discriminant analysis and signal\nmagnitude area. Shoaibet al. [13] demonstrated putting three\ntypes of sensors (i.e., accelerometer, gyroscope, and linear ac-\ncelerometer) on the wrist and pocket to identify less-repetitive\nactivities, such as smoking, eating, and drinking coffee. For\nsolving the problem of online time series segmentation, Ignatov\net al. [14] constructed the phase trajectory matrix and applied\nthe PCA technique to extract features of the ﬁrst period. Sousa\net al.[15] investigated the classiﬁcation capability with different\nfeature sets, such as time-domain (mathematical and statis-\ntical parameters), frequency-domain (wavelet transform), and\ndiscrete-domain (symbolic representations). Although the above\nworks achieved signiﬁcant progress for HAR, the limitations\nstill existed. Most of them ignored the affection of shift changes\nin position and orientation of the smartphone due to motion\nartifacts.\nDuring the past decades, many researchers have explored\nvarious ML and DL algorithms to identify more complex ac-\ntivities with higher recognition rates. Koseet al.[1] proved that\nk-nearest neighbor (k-NN) could obtain a higher classiﬁcation\naccuracy than Na¨ive Bayes (NB) by recognizing four kinds\nof activities, i.e., walking, running, sitting, and standing. Lee\nand Cho [16] designed a mixture-of-experts model for dealing\nwith uncertain and incomplete data. Reyes-Ortiz et al. [17]\nproposed a transition-aware HAR system based on the support\nvector machine (SVM) algorithm to classify a broad spectrum\n(up to 33 types) of activity with smartphone in real-time. Lee\nand Cho [18] presented a hierarchical hidden Markov model\n(HHMM) method to classify motions (standing, walking, go\nstairs, and running) and daily activities (shopping, taking a\nbus, and moving arms). A two-stage continuous hidden Markov\nmodel (HMM) algorithm was proposed to reduce the number of\nfeature subsets because it decomposed the complex activities\ninto several simpler ones [19]. Reiss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions",
        " motion\nsensors,” Sensors, vol. 16, no. 4, 2016, Art. no. 426.\n[14] A. D. Ignatov and V . V . Strijov, “Human activity recognition using\nquasiperiodic time series collected from a single tri-axial accelerometer,”\nMultimedia Tools Appl., vol. 75, no. 12, pp. 7257–7270, 2016.\n[15] W. Sousa, E. Souto, J. Rodrigres, P. Sadarc, R. Jalali, and K. El-Khatib,\n“A comparative analysis of the impact of features on human activity\nrecognition with smartphone sensors,” in Proc. 23rd Brazilian Symp.\nMultimedia Web, 2017, pp. 397–404.\n[16] Y .-S. Lee and S.-B. Cho, “Activity recognition with android phone using\nmixture-of-experts co-trained with labeled and unlabeled data,”Neuro-\ncomputing, vol. 126, pp. 106–115, 2014.\n[17] J.-L. Reyes-Ortiz, L. Oneto, A. Samà, X. Parra, and D. Anguita,\n“Transition-aware human activity recognition using smartphones,”Neu-\nrocomputing, vol. 171, pp. 754–767, 2016.\n[18] Y .-S. Lee and S.-B. Cho, “Activity recognition using hierarchical hidden\nMarkov models on a smartphone with 3d accelerometer,” inProc. Int.\nConf. Hybrid Artif. Intell. Syst., 2011, pp. 460–467.\n[19] C. A. Ronao and S.-B. Cho, “Human activity recognition using smartphone\nsensors with two-stage continuous hidden Markov models,” inProc. IEEE\n10th Int. Conf. Natural Computation, 2014, pp. 681–686.\n[20] A. Reiss, G. Hendeby, and D. Stricker, “A competitive approach for human\nactivity recognition on smartphones,” inProc. Eur . Symp. Artif. Neural\nNetw., Comput. Intell. Mach. Learn., Bruges, Belgium, 2013, pp. 455–460.\n[21] M. H. M. Noor, Z. Salcic, I. Kevin, and K. Wang, “Adaptive sliding window\nsegmentation for physical activity recognition using a single tri-axial\naccelerometer,”Pervasive Mobile Comput., vol. 38, pp. 41–59, 2017.\n[22] Y . Lu, Y . Wei, L. Liu, J. Zhong, L. Sun, and Y . Liu, “Towards unsupervised\nphysical activity recognition using smartphone accelerometers,”Multime-\ndia Tools Appl., vol. 76, no. 8, pp. 10701–10719, 2017.\n[23] L. Cao, Y . Wang, B. Zhang, Q. Jin, and A. V . Vasilakos, “Gchar: An efﬁcient\ngroup-based contextaware human activity recognition on smartphone,”J.\nParallel Distrib. Comput., vol. 118, pp. 67–80, 2018.\n[24] C. A. Ronao and S.-B. Cho, “Human activity recognition with smartphone\nsensors using deep learning neural networks,”Expert Syst. Appl., vol. 59,\npp. 235–244, 2016.\n[25] N. Y . Hammerla, S. Halloran, and T. Ploetz, “Deep, convolutional, and\n",
        " Lee, and T.-S. Kim, “A triaxial accelerometer-\nbased physical-activity recognition via augmented-signal features and a\nhierarchical recognizer,”IEEE Trans. Inf. Technol. Biomedicine, vol. 14,\nno. 5, pp. 1166–1172, Sep. 2010.\n[6] T. Sajana, C. S. Rani, and K. Narayana, “A survey on clustering techniques\nfor big data mining,”Indian J. Sci. Technol., vol. 9, no. 3, pp. 1–12, 2016.\n[7] C. N. Silla and A. A. Freitas, “A survey of hierarchical classiﬁcation across\ndifferent application domains,”Data Mining Knowl. Discovery, vol. 22,\nno. 1–2, pp. 31–72, 2011.\n[8] A. Wang, G. Chen, J. Yang, S. Zhao, and C.-Y . Chang, “A comparative\nstudy on human activity recognition using inertial sensors in a smart-\nphone,” IEEE Sensors J., vol. 16, no. 11, pp. 4566–4578, Jun. 2016.\n[9] H. Zou, T. Hastie, and R. Tibshirani, “Sparse principal component analy-\nsis,” J. Comput. Graphical Statist., vol. 15, no. 2, pp. 265–286, 2006.\n[10] S. Beura, B. Majhi, and R. Dash, “Automatic characterization of mam-\nmograms using fractal texture analysis and fast correlation based ﬁlter\nmethod,” inProc. 2nd Int. Conf. Perception Mach. Intell., 2015, pp. 85–91.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 423\n[11] G. Chandrashekar and F. Sahin, “A survey on feature selection methods,”\nComput. Elect. Eng., vol. 40, no. 1, pp. 16–28, 2014.\n[12] A. M. Khan, Y .-K. Lee, S. Lee, and T.-S. Kim, “Human activity recogni-\ntion via an accelerometer-enabled-smartphone using kernel discriminant\nanalysis,” inProc. IEEE 5th Int. Conf. Future Inf. Technol. (FutureTech),\n2010, pp. 1–6.\n[13] M. Shoaib, S. Bosch, O. D. Incel, H. Scholten, and P. J. Havinga, “Com-\nplex human activity recognition using smartphone and wrist-worn motion\nsensors,” Sensors, vol. 16, no. 4, 2016, Art. no. 426.\n[14] A. D. Ignatov and V . V . Strijov, “Human activity recognition using\nquasiperiodic time series collected from a single tri-axial accelerometer,”\nMultimedia Tools Appl., vol. 75, no. 12, pp. 7257–7270, 2016.\n[15] W. Sousa, E. Souto, J. Rodrigres, P. Sadarc, R. Jalali, and K. El-Khatib,\n“A comparative analysis of the impact of features on human activity\nrecognition with smartphone sensors,” in Proc. 23rd"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2534
    },
    {
      "id": "Q3",
      "question": "How were participants sampled in this study: by convenience, randomly, or consecutively?",
      "answer": "Unknown from this paper",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        11,
        4,
        7
      ],
      "chunks_str": [
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        "Sα|\nare selected to compute the static features. The meanings of\nthe symbols are as follows: Standard deviationσ, average (e.g.,\n¯∑ Sβ), maximummax, minimummin, difference (recurrence\nrelation) ▽ , and the whole numbers (N).\nB. Creation Module\nThe creation module includes two steps: One aims to achieve\nautomatic labeling using the Hk-mC algorithm, and the other\none is to build the HC classiﬁer for HAR. The Hk-mC algo-\nrithm 1 is implemented in an unsupervised manner with the\nﬁxed structure. It labels the extracted features setFmjj\ns∗p\n,jj =\n1,2,...,Ly m computed on the processed segments s∗\np,p =\n1,2,...,M (lines 2 and 3). For each layer, it calculates a parti-\ntion of a dissimilarity object consisting ofkk ≤ nc medoids.\nGiven a set of M data objects S = sp, the objective is to\npartition the dataset intonc classes, with each cluster having one\nrepresentative object known as a medoidsm\njj [33]. The objective\nfunction of the k-medoids clustering is\nCostkk =\nLym∑\njj=1\n∑\nsp∈M\nDkk(sp,sm\njj) (6)\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n418 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 4. Labeled tri-axis acceleration with ﬁxed activity programming.\nTABLE II\nTHE LAYERS ANDFEATURES FORCLUSTERING\nAlgorithm 1: Hierarchical k-medoids Clustering (Hk-mC).\nInput:\nthe raw IMU signalsS, the number of layersLy;\nOutput: labeled signal segments{sp,yp};\n1: divide S into M segments {sp};\n2: acquire the processed signalss∗\np by the algorithms in\nsection IV-A;\n3: extract features Fmjj\ns∗p\nbased on Table II;\n4: label the features and corresponding segments as\n{sp,yp};\nwhere Dkk is the dissimilarity between data object sp and\nmedoid sm\njj associated with cluster jj. In this article,Dkk is\nthe city block distance Dkk(sp,sm\njj)= |sp −sm\njj|. Then, the\nalgorithm clusters the features intokk classes and labels the\nsegments as{sp,yp} (line 4).\nFor clustering accuracy enhancement, the subjects were asked\nto do the 12 activities with a ﬁxed order (shown in Fig. 4). In\naddition, the number of clustering layers and order were ﬁxed\nand are reported in Table II. The mislabeled activities using the\nHk-mC algorithm will be removed or corrected manually.\nHowever, similar segments increase the computing burden for\nbuilding and updating a classiﬁer. To solve this problem for fast\ncomputation, a correlation-based data compression algorithm\nis designed to remove partially similar segments based on the\nsimilarity measurement theory [34]. The data compression algo-\nrithm aims to compare similarity by computing the covariance\ncoefﬁcient ρ (7) between every two matricessa and sb in the\nreconstructed datasetspk,k =1 ,2,...,n c with the same label,\nwhere a,b ∈ R+ and a ̸= b. For saving the compressing time, we\nadopt the seeker optimization algorithm [35] to control the speed\nby setting a trust degreeη.I fρ ≤ η, one"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE"
    },
    {
      "id": "Q4",
      "question": "How was the dataset described in this study before predictive modeling was performed?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        11,
        4,
        7
      ],
      "chunks_str": [
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        "Sα|\nare selected to compute the static features. The meanings of\nthe symbols are as follows: Standard deviationσ, average (e.g.,\n¯∑ Sβ), maximummax, minimummin, difference (recurrence\nrelation) ▽ , and the whole numbers (N).\nB. Creation Module\nThe creation module includes two steps: One aims to achieve\nautomatic labeling using the Hk-mC algorithm, and the other\none is to build the HC classiﬁer for HAR. The Hk-mC algo-\nrithm 1 is implemented in an unsupervised manner with the\nﬁxed structure. It labels the extracted features setFmjj\ns∗p\n,jj =\n1,2,...,Ly m computed on the processed segments s∗\np,p =\n1,2,...,M (lines 2 and 3). For each layer, it calculates a parti-\ntion of a dissimilarity object consisting ofkk ≤ nc medoids.\nGiven a set of M data objects S = sp, the objective is to\npartition the dataset intonc classes, with each cluster having one\nrepresentative object known as a medoidsm\njj [33]. The objective\nfunction of the k-medoids clustering is\nCostkk =\nLym∑\njj=1\n∑\nsp∈M\nDkk(sp,sm\njj) (6)\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n418 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 4. Labeled tri-axis acceleration with ﬁxed activity programming.\nTABLE II\nTHE LAYERS ANDFEATURES FORCLUSTERING\nAlgorithm 1: Hierarchical k-medoids Clustering (Hk-mC).\nInput:\nthe raw IMU signalsS, the number of layersLy;\nOutput: labeled signal segments{sp,yp};\n1: divide S into M segments {sp};\n2: acquire the processed signalss∗\np by the algorithms in\nsection IV-A;\n3: extract features Fmjj\ns∗p\nbased on Table II;\n4: label the features and corresponding segments as\n{sp,yp};\nwhere Dkk is the dissimilarity between data object sp and\nmedoid sm\njj associated with cluster jj. In this article,Dkk is\nthe city block distance Dkk(sp,sm\njj)= |sp −sm\njj|. Then, the\nalgorithm clusters the features intokk classes and labels the\nsegments as{sp,yp} (line 4).\nFor clustering accuracy enhancement, the subjects were asked\nto do the 12 activities with a ﬁxed order (shown in Fig. 4). In\naddition, the number of clustering layers and order were ﬁxed\nand are reported in Table II. The mislabeled activities using the\nHk-mC algorithm will be removed or corrected manually.\nHowever, similar segments increase the computing burden for\nbuilding and updating a classiﬁer. To solve this problem for fast\ncomputation, a correlation-based data compression algorithm\nis designed to remove partially similar segments based on the\nsimilarity measurement theory [34]. The data compression algo-\nrithm aims to compare similarity by computing the covariance\ncoefﬁcient ρ (7) between every two matricessa and sb in the\nreconstructed datasetspk,k =1 ,2,...,n c with the same label,\nwhere a,b ∈ R+ and a ̸= b. For saving the compressing time, we\nadopt the seeker optimization algorithm [35] to control the speed\nby setting a trust degreeη.I fρ ≤ η, one"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2479
    },
    {
      "id": "Q5",
      "question": "What was the proedure for splitting the dataset into training, validation, and test sets in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        4,
        8,
        11
      ],
      "chunks_str": [
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        ".\nHowever, similar segments increase the computing burden for\nbuilding and updating a classiﬁer. To solve this problem for fast\ncomputation, a correlation-based data compression algorithm\nis designed to remove partially similar segments based on the\nsimilarity measurement theory [34]. The data compression algo-\nrithm aims to compare similarity by computing the covariance\ncoefﬁcient ρ (7) between every two matricessa and sb in the\nreconstructed datasetspk,k =1 ,2,...,n c with the same label,\nwhere a,b ∈ R+ and a ̸= b. For saving the compressing time, we\nadopt the seeker optimization algorithm [35] to control the speed\nby setting a trust degreeη.I fρ ≤ η, one of the two segments (sa\nand sb) will be deleted. In this article,η =0 .98.\nρ = corr(sa,sb)\n=\n∑\nii(saii − ¯sa)(sbii − ¯sb)√∑ (sa − ¯sa)2\n√∑ (sb − ¯sbii)2\n= ⟨sa − ¯sa,sb − ¯sb⟩\n||sa − ¯sa||||sb − ¯sb||. (7)\nFinally, the compressed training dataset {si,yi},i =\n1,2,...,N is used to train the classiﬁerfj(X,θj),j =1 ,2,3\nbased on random ML or DL algorithms. The ﬁrst binary classiﬁer\nf1(X,θ1)is to divide static and dynamical activities by the single\nfeature σ(∑ ||Sα|l|2)) (line 1). The second six-class classiﬁer\nf2(X,θ2)separates the dynamical activities based on the feature\nset D reported in Table I (ML-based) or the labeled segments\n{s∗\ni,yi} (DL-based). Similarly, the third classiﬁer f3(X,θ3)\ndivides the seven static activities by the feature setS (ML-based)\nor the labeled segments{s∗\ni,yi}(DL-based) in line 3.\nFive ML algorithms (i.e.,k-NN, DT, NB, ANN, and SVM) and\na DL method (LSTM) are chosen. As a nonparametric approach,\nthe k-NN algorithm can search a group ofk samples that are\nnearest to unknown samples based on distance functions. In this\narticle, we adopt the city block distance. The computed class\nattributes of thek-NN in thesek samples determined the labels.\nAs a result, the parameterk was deﬁned utilizing a bootstrap\nprocedure. However, thei-NN method needs to handle missing\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 419\nFig. 5. Schematic diagram of the Ada-HAR communication system. In the “personal monitoring” unit, the subject’s activity can be identiﬁed by carryingt h e\nsmartphone where it has installed software with the proposed algorithms. In the “local monitoring” unit, people can monitor the users’ activity by analyzing the\nreceived data from the Wi-Fi network. In the “remote monitoring” unit, the predicted activities can be monitored by receiving the signals in a multipoint wireless\nbridge connection network.\nAlgorithm 2: Hierarchical Classiﬁcation (HC).\nInput: the labeled signal segments(s∗\ni,yi) or features set\n",
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2466
    },
    {
      "id": "Q6",
      "question": "What preprocessing techniques on the included variables/features were applied in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        3,
        4,
        2
      ],
      "chunks_str": [
        "iss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions was strongly dependent on the extracted\nfeatures from the used sensors. Different features were utilized\nfor achieving several kinds of HAR problems [22]. An efﬁcient\ngroup-based context-aware classiﬁcation method has been pro-\nposed to improve the classiﬁcation performance by exploiting\nhierarchical group-based scheme and context awareness rather\nthan the intensive computation [23].\nRecently, the advancement of HAR with inertial measurement\nunit (IMU) sensor broadly adopts DL algorithms. Ronao and\nCho [24] designed a three-(and four-) layer convolutional neural\nnetworks (CNN) with the short-time fast Fourier transform\nmethod for classifying six activities with a high classiﬁcation\naccuracy by comparing with the traditional ML algorithms, i.e.,\nNB, ANN, and j48 decision tree (DT). Hammerlaet al. [25]\nproved that bidirectional long short-term memory (Bi-LSTM)\nobtained more accurate results than deep NN, CNN, and other\nrecurrent neural network (RNN) by testing on three public\ndatasets. Although the DL-based approaches were widely known\nto extract features automatically, they were affected by the\nselected sensors. Wang et al. [8] compared the performance\nobtained using different inertial sensors in a smartphone. Using\nboth accelerometer and gyroscope was demonstrated to yield\naccuracy enhancement. In our previous work, we compared\nthe recognition rate for identifying 12 activities by using dif-\nferent combined sensors, such as accelerometer, gyroscope,\nmagnetometer, and orientation. By combining accelerometer,\ngyroscope, and direction, the designed deep CNN model could\nobtain high accuracy [26], [27]. The results proved that adopting\ntransferred signals and more sensors can perform the results.\nMoreover, the DL-based methods were time-consuming for\nclassiﬁer evolution in a dynamic situation [28].\nIII. PROBLEM STATEMENT\nThe following notations describe the data stream of the Ada-\nHAR system through training, testing, and updating procedures,\nas shown in Fig. 1. The embedded IMU sensors in a smartphone\ncan provide nine-dimensional (9-D) raw signalsS, including\nacceleration, magnetism, and angular velocity [29].S can be\ndivided into M segments, namely sp,p =1 ,2,...,M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile,",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " principal component analysis (PCA) [9], fast\n2168-2291 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 415\ncorrelation-based ﬁlter [10], and sequential forward selection\n(wrapper) [11] methods. By comparing the classiﬁcation rate of\nidentifying ﬁve daily activities carrying a smartphone on ﬁve\nbody positions, Khanet al.[12] proved that Kernel discriminant\nanalysis is better than linear discriminant analysis and signal\nmagnitude area. Shoaibet al. [13] demonstrated putting three\ntypes of sensors (i.e., accelerometer, gyroscope, and linear ac-\ncelerometer) on the wrist and pocket to identify less-repetitive\nactivities, such as smoking, eating, and drinking coffee. For\nsolving the problem of online time series segmentation, Ignatov\net al. [14] constructed the phase trajectory matrix and applied\nthe PCA technique to extract features of the ﬁrst period. Sousa\net al.[15] investigated the classiﬁcation capability with different\nfeature sets, such as time-domain (mathematical and statis-\ntical parameters), frequency-domain (wavelet transform), and\ndiscrete-domain (symbolic representations). Although the above\nworks achieved signiﬁcant progress for HAR, the limitations\nstill existed. Most of them ignored the affection of shift changes\nin position and orientation of the smartphone due to motion\nartifacts.\nDuring the past decades, many researchers have explored\nvarious ML and DL algorithms to identify more complex ac-\ntivities with higher recognition rates. Koseet al.[1] proved that\nk-nearest neighbor (k-NN) could obtain a higher classiﬁcation\naccuracy than Na¨ive Bayes (NB) by recognizing four kinds\nof activities, i.e., walking, running, sitting, and standing. Lee\nand Cho [16] designed a mixture-of-experts model for dealing\nwith uncertain and incomplete data. Reyes-Ortiz et al. [17]\nproposed a transition-aware HAR system based on the support\nvector machine (SVM) algorithm to classify a broad spectrum\n(up to 33 types) of activity with smartphone in real-time. Lee\nand Cho [18] presented a hierarchical hidden Markov model\n(HHMM) method to classify motions (standing, walking, go\nstairs, and running) and daily activities (shopping, taking a\nbus, and moving arms). A two-stage continuous hidden Markov\nmodel (HMM) algorithm was proposed to reduce the number of\nfeature subsets because it decomposed the complex activities\ninto several simpler ones [19]. Reiss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2503
    },
    {
      "id": "Q7",
      "question": "How is missing data handled in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        4,
        9,
        2
      ],
      "chunks_str": [
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 419\nFig. 5. Schematic diagram of the Ada-HAR communication system. In the “personal monitoring” unit, the subject’s activity can be identiﬁed by carryingt h e\nsmartphone where it has installed software with the proposed algorithms. In the “local monitoring” unit, people can monitor the users’ activity by analyzing the\nreceived data from the Wi-Fi network. In the “remote monitoring” unit, the predicted activities can be monitored by receiving the signals in a multipoint wireless\nbridge connection network.\nAlgorithm 2: Hierarchical Classiﬁcation (HC).\nInput: the labeled signal segments(s∗\ni,yi) or features set\n{Fhj\ns∗\ni\n,yi};\nOutput: the three layers HC classiﬁerfj(X,θj),j =1 ,2,3;\n1: build a binary classiﬁer f1(X,θ1) to classify dynamic\nand static activities by the featureσ(∑ ||Sα|l|2));\n2: train a six-class classiﬁer f2(X,θ2) to identify\ndynamical activities;\n3: establish a seven-class classiﬁer f3(X,θ3) to divide\nthe static activities;\ndata. It is sensitive to class outliers and lots of irrelevant at-\ntributes [36]. Different from thek-NN method, the DT approach\nneeds to set two parameters, namely the number of trees and the\nnumber of features in each split. A large number of trees can\nprovide a robust model for predicting real-world results [37].\nHowever, this operation should optimize more parameters such\nthat it will be time-consuming. The NB approach assumes that\nall variables are mutually correlated and contribute towards\nclassiﬁcation. When the class variable is given, the NB classiﬁer\nconsiders that the presence (or absence) of a particular attribute\nof a class is unrelated to the presence (or absence) of any other\nfeatures. However, the strong assumption on the shape of data\ndistribution limits the performance of the built classiﬁer [38].\nThe ANN method is a widely used method for classiﬁcation [39].\nIt combines several processing layers using simple elements\noperating in parallel to build the connection between inputs and\noutputs. However, the problems of overﬁtting and underﬁtting\nbring too much uncertainty learning in a dynamic situation. The\nSVM algorithm is to distinctly classify the signal segmentss∗\ni\nby ﬁnding a hyperplane in anN-dimensional (N-D) space. There\nare two primary parameters of the SVM approach, namely the\noptimum parameters of cost and the kernel width parameter.\nAlgorithm 3: The recognition algorithm.\nInput: the HC classiﬁersf(X,θ), current inputst, sample\nfrequency Fs, detection lengthLd, and overlayLo;\nOutput:\npredicted activitiesˆyt;\n1: while (t·Fs)/(Ld +Lo)=1 ,\n2: identify dynamic or static activity byˆyt = f1(X,θ1)\nbased on featureσ(∑ ||Sα|l|2));\n3: if ˆyt ∈ ΛD, identify a dynamical activity on featuresD\nor segments∗\nt;\n4: else ˆyt ∈ ΛS, identify a static activity on featuresS or\nsegment s∗\nt;\n5: end if\n6: end while\nFor accuracy enhancement, the SVM model commonly utilizes\nthe radial basis function kernel and linear kernel commonly.\nAs a standard RNN method, the LSTM algorithm learns the\nlong-term dependencies based on the three gates, namely an\ninput gate, a forget gate to allow the L",
        " principal component analysis (PCA) [9], fast\n2168-2291 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 415\ncorrelation-based ﬁlter [10], and sequential forward selection\n(wrapper) [11] methods. By comparing the classiﬁcation rate of\nidentifying ﬁve daily activities carrying a smartphone on ﬁve\nbody positions, Khanet al.[12] proved that Kernel discriminant\nanalysis is better than linear discriminant analysis and signal\nmagnitude area. Shoaibet al. [13] demonstrated putting three\ntypes of sensors (i.e., accelerometer, gyroscope, and linear ac-\ncelerometer) on the wrist and pocket to identify less-repetitive\nactivities, such as smoking, eating, and drinking coffee. For\nsolving the problem of online time series segmentation, Ignatov\net al. [14] constructed the phase trajectory matrix and applied\nthe PCA technique to extract features of the ﬁrst period. Sousa\net al.[15] investigated the classiﬁcation capability with different\nfeature sets, such as time-domain (mathematical and statis-\ntical parameters), frequency-domain (wavelet transform), and\ndiscrete-domain (symbolic representations). Although the above\nworks achieved signiﬁcant progress for HAR, the limitations\nstill existed. Most of them ignored the affection of shift changes\nin position and orientation of the smartphone due to motion\nartifacts.\nDuring the past decades, many researchers have explored\nvarious ML and DL algorithms to identify more complex ac-\ntivities with higher recognition rates. Koseet al.[1] proved that\nk-nearest neighbor (k-NN) could obtain a higher classiﬁcation\naccuracy than Na¨ive Bayes (NB) by recognizing four kinds\nof activities, i.e., walking, running, sitting, and standing. Lee\nand Cho [16] designed a mixture-of-experts model for dealing\nwith uncertain and incomplete data. Reyes-Ortiz et al. [17]\nproposed a transition-aware HAR system based on the support\nvector machine (SVM) algorithm to classify a broad spectrum\n(up to 33 types) of activity with smartphone in real-time. Lee\nand Cho [18] presented a hierarchical hidden Markov model\n(HHMM) method to classify motions (standing, walking, go\nstairs, and running) and daily activities (shopping, taking a\nbus, and moving arms). A two-stage continuous hidden Markov\nmodel (HMM) algorithm was proposed to reduce the number of\nfeature subsets because it decomposed the complex activities\ninto several simpler ones [19]. Reiss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2486
    },
    {
      "id": "Q8",
      "question": "How are outliers handled in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        17,
        4,
        15
      ],
      "chunks_str": [
        " 2017.\n[23] L. Cao, Y . Wang, B. Zhang, Q. Jin, and A. V . Vasilakos, “Gchar: An efﬁcient\ngroup-based contextaware human activity recognition on smartphone,”J.\nParallel Distrib. Comput., vol. 118, pp. 67–80, 2018.\n[24] C. A. Ronao and S.-B. Cho, “Human activity recognition with smartphone\nsensors using deep learning neural networks,”Expert Syst. Appl., vol. 59,\npp. 235–244, 2016.\n[25] N. Y . Hammerla, S. Halloran, and T. Ploetz, “Deep, convolutional, and\nrecurrent models for human activity recognition using wearables,” 2016,\narXiv:1604.08880.\n[26] W. Qi, H. Su, C. Yang, G. Ferrigno, E. De Momi, and A. Aliverti,\n“A fast and robust deep convolutional neural networks for complex\nhuman activity recognition using smartphone,”Sensors, vol. 19, 2019,\nArt. no. 3731.\n[27] W. Qi and A. Aliverti, “A multimodal wearable system for continuous\nand real-time breathing pattern monitoring during daily activity,”IEEE J.\nBiomed. Health Inform., 2019.\n[28] Y . Liang, Z. Cai, J. Yu, Q. Han, and Y . Li, “Deep learning based inference\nof private information using embedded sensors in smart devices,”IEEE\nNetw., vol. 32, no. 4, pp. 8–14, Jul./Aug. 2018.\n[29] O. Särkkä, T. Nieminen, S. Suuriniemi, and L. Kettunen, “A multi-position\ncalibration method for consumer-grade accelerometers, gyroscopes, and\nmagnetometers to ﬁeld conditions,” IEEE Sensors J., vol. 17, no. 11,\npp. 3470–3481, Jun. 2017.\n[30] J. O. Laguna, A. G. Olaya, and D. Borrajo, “A dynamic sliding window\napproach for activity recognition,” inProc. Int. Conf. User Model., Adap-\ntation, Personalization, 2011, pp. 219–230.\n[31] P. Kanjiya, V . M. Khadkikar, and M. S. ElMoursi, “Adaptive low-pass ﬁlter\nbased dc offset removal technique for three-phase PLLs,”IEEE Trans. Ind.\nElectron., vol. 65, no. 11, pp. 9025–9029, Nov. 2018.\n[32] D. Roetenberg, H. J. Luinge, C. T. Baten, and P. H. Veltink, “Compensation\nof magnetic disturbances improves inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " Lee, and T.-S. Kim, “A triaxial accelerometer-\nbased physical-activity recognition via augmented-signal features and a\nhierarchical recognizer,”IEEE Trans. Inf. Technol. Biomedicine, vol. 14,\nno. 5, pp. 1166–1172, Sep. 2010.\n[6] T. Sajana, C. S. Rani, and K. Narayana, “A survey on clustering techniques\nfor big data mining,”Indian J. Sci. Technol., vol. 9, no. 3, pp. 1–12, 2016.\n[7] C. N. Silla and A. A. Freitas, “A survey of hierarchical classiﬁcation across\ndifferent application domains,”Data Mining Knowl. Discovery, vol. 22,\nno. 1–2, pp. 31–72, 2011.\n[8] A. Wang, G. Chen, J. Yang, S. Zhao, and C.-Y . Chang, “A comparative\nstudy on human activity recognition using inertial sensors in a smart-\nphone,” IEEE Sensors J., vol. 16, no. 11, pp. 4566–4578, Jun. 2016.\n[9] H. Zou, T. Hastie, and R. Tibshirani, “Sparse principal component analy-\nsis,” J. Comput. Graphical Statist., vol. 15, no. 2, pp. 265–286, 2006.\n[10] S. Beura, B. Majhi, and R. Dash, “Automatic characterization of mam-\nmograms using fractal texture analysis and fast correlation based ﬁlter\nmethod,” inProc. 2nd Int. Conf. Perception Mach. Intell., 2015, pp. 85–91.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 423\n[11] G. Chandrashekar and F. Sahin, “A survey on feature selection methods,”\nComput. Elect. Eng., vol. 40, no. 1, pp. 16–28, 2014.\n[12] A. M. Khan, Y .-K. Lee, S. Lee, and T.-S. Kim, “Human activity recogni-\ntion via an accelerometer-enabled-smartphone using kernel discriminant\nanalysis,” inProc. IEEE 5th Int. Conf. Future Inf. Technol. (FutureTech),\n2010, pp. 1–6.\n[13] M. Shoaib, S. Bosch, O. D. Incel, H. Scholten, and P. J. Havinga, “Com-\nplex human activity recognition using smartphone and wrist-worn motion\nsensors,” Sensors, vol. 16, no. 4, 2016, Art. no. 426.\n[14] A. D. Ignatov and V . V . Strijov, “Human activity recognition using\nquasiperiodic time series collected from a single tri-axial accelerometer,”\nMultimedia Tools Appl., vol. 75, no. 12, pp. 7257–7270, 2016.\n[15] W. Sousa, E. Souto, J. Rodrigres, P. Sadarc, R. Jalali, and K. El-Khatib,\n“A comparative analysis of the impact of features on human activity\nrecognition with smartphone sensors,” in Proc. 23rd"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2499
    },
    {
      "id": "Q9",
      "question": "Which prediction models were used in this study?",
      "answer": "k-NN, DT, NB, ANN, SVM, and LSTM",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        4,
        12,
        11
      ],
      "chunks_str": [
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the average testing time and training\ntime computed on the compressed dataset are signiﬁcantly less\nthan those for the uncompressed dataset. Hence, compressing the\ntraining datasets saves more time for building a new classiﬁer.\nEven if the accuracy obtained on the uncompressed dataset is\ngreater than that on the compressed dataset, it is time-consuming\nto build the classiﬁer and predict an activity. Moreover, the trust\ndegree η can be adjusted to increase the accuracy using (7).\nB. Online Learning Examination\nThis experiment aims to prove the updating ability of Ada-\nHAR system for recognizing a new activity. Two new activities\n(squats and twisting hips) were collected from one subject\ncarrying the smartphone on the waist or put in the left pocket,\nrespectively. To conﬁrm that the proposed signal processing al-\ngorithms could overcome the effect of changing the direction of\nmobile phone, we combined the collected data of two directions\nwith the same testing protocol (shown in each top graph of\nFig. 6). The DL-based HC algorithm was not adopted because\nthe training procedure is costly. The experiments adopted an\nonline batch learning mechanism. The SVM method used the\nGaussian kernel. The built ML-based classiﬁers for identifying\nthe 12 original activities were used to predict the new activity\non the four datasets. The following four experiments were per-\nformed to evaluate the adaptive performance of both compressed\nand uncompressed datasets.\nFig. 6(a) displays a comparison results of the online accuracy\nand computational time for predicting squats by carrying the\nmobile phone on the waist. The top graph is the collected 3-axis\nacceleration with two directions. The middle graph is the online\nclassiﬁcation accuracy computed by (1) and (2) at time (epoch)t.\nBoth k-NN and SVM methods obtain a higher accuracy than the\nother methods. The bottom graph is the online predicting time.\nThe amplitudes ofk-NN, DT, and SVM are 0.05 s, while the other\napproaches require more than 1 s to predict activity. Hence, the\nk-NN-based HC classiﬁer is the best method for recognizing\nthe new activity. Fig. 6(b) portrays the results of predicting\nsquats by putting the mobile phone in the left pant pocket. The\nHC classiﬁers based onk-NN, SVM, and DT obtain a higher\naccuracy for identifying squats, andk-NN spends less time to\nretrain the classiﬁer. Fig. 6(c) and (d) shows the validation\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 421\nTABLE III\nTHE COMPARATIVERESULTS AMONG HC CLASSIFIER BASED ON K-NN, DT",
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2481
    },
    {
      "id": "Q10",
      "question": "What considerations were given to model selection and hyperparameter tuning in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        3,
        18,
        0
      ],
      "chunks_str": [
        "iss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions was strongly dependent on the extracted\nfeatures from the used sensors. Different features were utilized\nfor achieving several kinds of HAR problems [22]. An efﬁcient\ngroup-based context-aware classiﬁcation method has been pro-\nposed to improve the classiﬁcation performance by exploiting\nhierarchical group-based scheme and context awareness rather\nthan the intensive computation [23].\nRecently, the advancement of HAR with inertial measurement\nunit (IMU) sensor broadly adopts DL algorithms. Ronao and\nCho [24] designed a three-(and four-) layer convolutional neural\nnetworks (CNN) with the short-time fast Fourier transform\nmethod for classifying six activities with a high classiﬁcation\naccuracy by comparing with the traditional ML algorithms, i.e.,\nNB, ANN, and j48 decision tree (DT). Hammerlaet al. [25]\nproved that bidirectional long short-term memory (Bi-LSTM)\nobtained more accurate results than deep NN, CNN, and other\nrecurrent neural network (RNN) by testing on three public\ndatasets. Although the DL-based approaches were widely known\nto extract features automatically, they were affected by the\nselected sensors. Wang et al. [8] compared the performance\nobtained using different inertial sensors in a smartphone. Using\nboth accelerometer and gyroscope was demonstrated to yield\naccuracy enhancement. In our previous work, we compared\nthe recognition rate for identifying 12 activities by using dif-\nferent combined sensors, such as accelerometer, gyroscope,\nmagnetometer, and orientation. By combining accelerometer,\ngyroscope, and direction, the designed deep CNN model could\nobtain high accuracy [26], [27]. The results proved that adopting\ntransferred signals and more sensors can perform the results.\nMoreover, the DL-based methods were time-consuming for\nclassiﬁer evolution in a dynamic situation [28].\nIII. PROBLEM STATEMENT\nThe following notations describe the data stream of the Ada-\nHAR system through training, testing, and updating procedures,\nas shown in Fig. 1. The embedded IMU sensors in a smartphone\ncan provide nine-dimensional (9-D) raw signalsS, including\nacceleration, magnetism, and angular velocity [29].S can be\ndivided into M segments, namely sp,p =1 ,2,...,M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile,",
        " inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu, “Seeker optimization algorithm for digital\nIIR ﬁlter design,”IEEE Trans. Ind. Electron., vol. 57, no. 5, pp. 1710–1718,\nMay 2009.\n[36] N. M. Hewahi and M. K. Saad, “Class outliers mining: Distance-based\napproach.” Int. J. Intell. Syst. Techn., vol. 2, no. 1, pp. 55–68, 2007.\n[37] A. Liaw et al., “Classiﬁcation and regression by randomforest,”RN e w s,\nvol. 2, no. 3, pp. 18–22, 2002.\n[38] S. D. Jadhav and H. Channe, “Comparative study of k-NN, Naive Bayes\nand decision tree classiﬁcation techniques,”Int. J. Sci. Res., vol. 5, no. 1,\npp. 1842–1845, 2016.\n[39] S. J. Russell and P. Norvig,Artiﬁcial Intelligence: A Modern Approach.\nMalaysia: Pearson Education Limited, 2016.\n[40] Y . Wang, X. Jia, Q. Jin, and J. Ma, “Mobile crowdsourcing: framework,\nchallenges, and solutions,”Concurrency Comput.: Practice Experience,\nvol. 29, no. 3, 2017, Art. no. e3789.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. ",
        "414 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nA Smartphone-Based Adaptive Recognition and\nReal-Time Monitoring System for Human Activities\nWen Qi , Student Member , IEEE,H a n gS u, Member , IEEE, and Andrea Aliverti\nAbstract—Human activity recognition (HAR) using smart-\nphones provides signiﬁcant healthcare guidance for telemedicine\nand long-term treatment. Machine learning and deep learning\n(DL) techniques are widely utilized for the scientiﬁc study of the\nstatistical models of human behaviors. However, the performance\nof existing HAR platforms is limited by complex physical activity.\nIn this article, we proposed an adaptive recognition and real-time\nmonitoring system for human activities (Ada-HAR), which is ex-\npected to identify more human motions in dynamic situations. The\nAda-HAR framework introduces an unsupervised online learning\nalgorithm that is independent of the number of class constraints.\nFurthermore, the adopted hierarchical clustering and classiﬁca-\ntion algorithms label and classify 12 activities (ﬁve dynamics, six\nstatics, and a series of transitions) autonomously. Finally, practical\nexperiments have been performed to validate the effectiveness and\nrobustness of the proposed algorithms. Compared with the methods\nmentioned in the literature, the results show that the DL-based\nclassiﬁer obtains a higher recognition rate (95.15%, waist, and\n92.20%, pocket). The decision-tree-based classiﬁer is the fastest\nmethod for modal evolution. Finally, the Ada-HAR system can\nmonitor human activity in real time, regardless of the direction\nof the smartphone.\nIndex Terms —Data compression, deep learning (DL),\nhierarchical classiﬁcation (HC), human activity recognition\n(HAR).\nI. INTRODUCTION\nR\nECOGNIZING human activities using inertial sensors in\na smartphone has attracted increasing research interests\nduring the past decades in various domains, ranging from home\nhealthcare to sports monitoring, rehabilitation, personalized\nmedicine, and mental disorders [1]. Recently, with the develop-\nment of the Internet of Things, machine learning (ML), and deep\nlearning (DL) techniques, human activity recognition (HAR)\ncan be achieved by transferring data in the body area networks\nand wireless Ethernet, allowing the assessment of the human\nphysical and physiological status [2]. However, many studies\ndevelop appropriate tasks for a given HAR system by resorting\nto extensive heuristic knowledge [3]. They are applicable in a\nlaboratory or well-controlled situation via body-ﬁxed mobile\nManuscript received May 24, 2019; revised September 2, 2019 and January\n1, 2020; accepted February 23, 2020. Date of publication April 24, 2020; date of\ncurrent version September 15, 2020. This article was recommended by Associate\nEditor Bin Guo.(Corresponding author: Wen Qi.)\nThe authors are with the Dipartimento di Elettronica, Informazione\ne Bioingegneria, Politecnico di Milano, 20133 Milano, Italy (e-mail:\nwen.qi@polimi.it; hang.su@polimi.it; andrea.aliverti@polimi.it).\nColor versions of one or more of the ﬁgures in this article are available online\nat http://ieeexplore.ieee.org.\nDigital Object Identiﬁer 10.1109/THMS.2020.2984181\ndevices [4]. The variability of the disturbances of the mobile\ndevices affects the recognition rate of the HAR system, such as\nmovement artifacts, baseline noise, the happening of new activ-\nity, and the differences among users. For example, identifying\nthe same walking status of the elderly and"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2242
    },
    {
      "id": "Q11",
      "question": "How was data augmentation or generation used in this study?",
      "answer": "Data compression to remove similar segments.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        4,
        18,
        11
      ],
      "chunks_str": [
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu, “Seeker optimization algorithm for digital\nIIR ﬁlter design,”IEEE Trans. Ind. Electron., vol. 57, no. 5, pp. 1710–1718,\nMay 2009.\n[36] N. M. Hewahi and M. K. Saad, “Class outliers mining: Distance-based\napproach.” Int. J. Intell. Syst. Techn., vol. 2, no. 1, pp. 55–68, 2007.\n[37] A. Liaw et al., “Classiﬁcation and regression by randomforest,”RN e w s,\nvol. 2, no. 3, pp. 18–22, 2002.\n[38] S. D. Jadhav and H. Channe, “Comparative study of k-NN, Naive Bayes\nand decision tree classiﬁcation techniques,”Int. J. Sci. Res., vol. 5, no. 1,\npp. 1842–1845, 2016.\n[39] S. J. Russell and P. Norvig,Artiﬁcial Intelligence: A Modern Approach.\nMalaysia: Pearson Education Limited, 2016.\n[40] Y . Wang, X. Jia, Q. Jin, and J. Ma, “Mobile crowdsourcing: framework,\nchallenges, and solutions,”Concurrency Comput.: Practice Experience,\nvol. 29, no. 3, 2017, Art. no. e3789.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. ",
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2197
    },
    {
      "id": "Q12",
      "question": "Is the performance of the predictive models benchmarked or compared to a baseline?",
      "answer": "Yes, compared among ML and DL classifiers.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        11,
        12,
        4
      ],
      "chunks_str": [
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the",
        " (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the average testing time and training\ntime computed on the compressed dataset are signiﬁcantly less\nthan those for the uncompressed dataset. Hence, compressing the\ntraining datasets saves more time for building a new classiﬁer.\nEven if the accuracy obtained on the uncompressed dataset is\ngreater than that on the compressed dataset, it is time-consuming\nto build the classiﬁer and predict an activity. Moreover, the trust\ndegree η can be adjusted to increase the accuracy using (7).\nB. Online Learning Examination\nThis experiment aims to prove the updating ability of Ada-\nHAR system for recognizing a new activity. Two new activities\n(squats and twisting hips) were collected from one subject\ncarrying the smartphone on the waist or put in the left pocket,\nrespectively. To conﬁrm that the proposed signal processing al-\ngorithms could overcome the effect of changing the direction of\nmobile phone, we combined the collected data of two directions\nwith the same testing protocol (shown in each top graph of\nFig. 6). The DL-based HC algorithm was not adopted because\nthe training procedure is costly. The experiments adopted an\nonline batch learning mechanism. The SVM method used the\nGaussian kernel. The built ML-based classiﬁers for identifying\nthe 12 original activities were used to predict the new activity\non the four datasets. The following four experiments were per-\nformed to evaluate the adaptive performance of both compressed\nand uncompressed datasets.\nFig. 6(a) displays a comparison results of the online accuracy\nand computational time for predicting squats by carrying the\nmobile phone on the waist. The top graph is the collected 3-axis\nacceleration with two directions. The middle graph is the online\nclassiﬁcation accuracy computed by (1) and (2) at time (epoch)t.\nBoth k-NN and SVM methods obtain a higher accuracy than the\nother methods. The bottom graph is the online predicting time.\nThe amplitudes ofk-NN, DT, and SVM are 0.05 s, while the other\napproaches require more than 1 s to predict activity. Hence, the\nk-NN-based HC classiﬁer is the best method for recognizing\nthe new activity. Fig. 6(b) portrays the results of predicting\nsquats by putting the mobile phone in the left pant pocket. The\nHC classiﬁers based onk-NN, SVM, and DT obtain a higher\naccuracy for identifying squats, andk-NN spends less time to\nretrain the classiﬁer. Fig. 6(c) and (d) shows the validation\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 421\nTABLE III\nTHE COMPARATIVERESULTS AMONG HC CLASSIFIER BASED ON K-NN, DT",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2481
    },
    {
      "id": "Q13",
      "question": "Which type of explainability techniques are used?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        3,
        0,
        2
      ],
      "chunks_str": [
        "iss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions was strongly dependent on the extracted\nfeatures from the used sensors. Different features were utilized\nfor achieving several kinds of HAR problems [22]. An efﬁcient\ngroup-based context-aware classiﬁcation method has been pro-\nposed to improve the classiﬁcation performance by exploiting\nhierarchical group-based scheme and context awareness rather\nthan the intensive computation [23].\nRecently, the advancement of HAR with inertial measurement\nunit (IMU) sensor broadly adopts DL algorithms. Ronao and\nCho [24] designed a three-(and four-) layer convolutional neural\nnetworks (CNN) with the short-time fast Fourier transform\nmethod for classifying six activities with a high classiﬁcation\naccuracy by comparing with the traditional ML algorithms, i.e.,\nNB, ANN, and j48 decision tree (DT). Hammerlaet al. [25]\nproved that bidirectional long short-term memory (Bi-LSTM)\nobtained more accurate results than deep NN, CNN, and other\nrecurrent neural network (RNN) by testing on three public\ndatasets. Although the DL-based approaches were widely known\nto extract features automatically, they were affected by the\nselected sensors. Wang et al. [8] compared the performance\nobtained using different inertial sensors in a smartphone. Using\nboth accelerometer and gyroscope was demonstrated to yield\naccuracy enhancement. In our previous work, we compared\nthe recognition rate for identifying 12 activities by using dif-\nferent combined sensors, such as accelerometer, gyroscope,\nmagnetometer, and orientation. By combining accelerometer,\ngyroscope, and direction, the designed deep CNN model could\nobtain high accuracy [26], [27]. The results proved that adopting\ntransferred signals and more sensors can perform the results.\nMoreover, the DL-based methods were time-consuming for\nclassiﬁer evolution in a dynamic situation [28].\nIII. PROBLEM STATEMENT\nThe following notations describe the data stream of the Ada-\nHAR system through training, testing, and updating procedures,\nas shown in Fig. 1. The embedded IMU sensors in a smartphone\ncan provide nine-dimensional (9-D) raw signalsS, including\nacceleration, magnetism, and angular velocity [29].S can be\ndivided into M segments, namely sp,p =1 ,2,...,M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile,",
        "414 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nA Smartphone-Based Adaptive Recognition and\nReal-Time Monitoring System for Human Activities\nWen Qi , Student Member , IEEE,H a n gS u, Member , IEEE, and Andrea Aliverti\nAbstract—Human activity recognition (HAR) using smart-\nphones provides signiﬁcant healthcare guidance for telemedicine\nand long-term treatment. Machine learning and deep learning\n(DL) techniques are widely utilized for the scientiﬁc study of the\nstatistical models of human behaviors. However, the performance\nof existing HAR platforms is limited by complex physical activity.\nIn this article, we proposed an adaptive recognition and real-time\nmonitoring system for human activities (Ada-HAR), which is ex-\npected to identify more human motions in dynamic situations. The\nAda-HAR framework introduces an unsupervised online learning\nalgorithm that is independent of the number of class constraints.\nFurthermore, the adopted hierarchical clustering and classiﬁca-\ntion algorithms label and classify 12 activities (ﬁve dynamics, six\nstatics, and a series of transitions) autonomously. Finally, practical\nexperiments have been performed to validate the effectiveness and\nrobustness of the proposed algorithms. Compared with the methods\nmentioned in the literature, the results show that the DL-based\nclassiﬁer obtains a higher recognition rate (95.15%, waist, and\n92.20%, pocket). The decision-tree-based classiﬁer is the fastest\nmethod for modal evolution. Finally, the Ada-HAR system can\nmonitor human activity in real time, regardless of the direction\nof the smartphone.\nIndex Terms —Data compression, deep learning (DL),\nhierarchical classiﬁcation (HC), human activity recognition\n(HAR).\nI. INTRODUCTION\nR\nECOGNIZING human activities using inertial sensors in\na smartphone has attracted increasing research interests\nduring the past decades in various domains, ranging from home\nhealthcare to sports monitoring, rehabilitation, personalized\nmedicine, and mental disorders [1]. Recently, with the develop-\nment of the Internet of Things, machine learning (ML), and deep\nlearning (DL) techniques, human activity recognition (HAR)\ncan be achieved by transferring data in the body area networks\nand wireless Ethernet, allowing the assessment of the human\nphysical and physiological status [2]. However, many studies\ndevelop appropriate tasks for a given HAR system by resorting\nto extensive heuristic knowledge [3]. They are applicable in a\nlaboratory or well-controlled situation via body-ﬁxed mobile\nManuscript received May 24, 2019; revised September 2, 2019 and January\n1, 2020; accepted February 23, 2020. Date of publication April 24, 2020; date of\ncurrent version September 15, 2020. This article was recommended by Associate\nEditor Bin Guo.(Corresponding author: Wen Qi.)\nThe authors are with the Dipartimento di Elettronica, Informazione\ne Bioingegneria, Politecnico di Milano, 20133 Milano, Italy (e-mail:\nwen.qi@polimi.it; hang.su@polimi.it; andrea.aliverti@polimi.it).\nColor versions of one or more of the ﬁgures in this article are available online\nat http://ieeexplore.ieee.org.\nDigital Object Identiﬁer 10.1109/THMS.2020.2984181\ndevices [4]. The variability of the disturbances of the mobile\ndevices affects the recognition rate of the HAR system, such as\nmovement artifacts, baseline noise, the happening of new activ-\nity, and the differences among users. For example, identifying\nthe same walking status of the elderly and",
        " principal component analysis (PCA) [9], fast\n2168-2291 © 2020 IEEE. Personal use is permitted, but republication/redistribution requires IEEE permission.\nSee https://www.ieee.org/publications/rights/index.html for more information.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 415\ncorrelation-based ﬁlter [10], and sequential forward selection\n(wrapper) [11] methods. By comparing the classiﬁcation rate of\nidentifying ﬁve daily activities carrying a smartphone on ﬁve\nbody positions, Khanet al.[12] proved that Kernel discriminant\nanalysis is better than linear discriminant analysis and signal\nmagnitude area. Shoaibet al. [13] demonstrated putting three\ntypes of sensors (i.e., accelerometer, gyroscope, and linear ac-\ncelerometer) on the wrist and pocket to identify less-repetitive\nactivities, such as smoking, eating, and drinking coffee. For\nsolving the problem of online time series segmentation, Ignatov\net al. [14] constructed the phase trajectory matrix and applied\nthe PCA technique to extract features of the ﬁrst period. Sousa\net al.[15] investigated the classiﬁcation capability with different\nfeature sets, such as time-domain (mathematical and statis-\ntical parameters), frequency-domain (wavelet transform), and\ndiscrete-domain (symbolic representations). Although the above\nworks achieved signiﬁcant progress for HAR, the limitations\nstill existed. Most of them ignored the affection of shift changes\nin position and orientation of the smartphone due to motion\nartifacts.\nDuring the past decades, many researchers have explored\nvarious ML and DL algorithms to identify more complex ac-\ntivities with higher recognition rates. Koseet al.[1] proved that\nk-nearest neighbor (k-NN) could obtain a higher classiﬁcation\naccuracy than Na¨ive Bayes (NB) by recognizing four kinds\nof activities, i.e., walking, running, sitting, and standing. Lee\nand Cho [16] designed a mixture-of-experts model for dealing\nwith uncertain and incomplete data. Reyes-Ortiz et al. [17]\nproposed a transition-aware HAR system based on the support\nvector machine (SVM) algorithm to classify a broad spectrum\n(up to 33 types) of activity with smartphone in real-time. Lee\nand Cho [18] presented a hierarchical hidden Markov model\n(HHMM) method to classify motions (standing, walking, go\nstairs, and running) and daily activities (shopping, taking a\nbus, and moving arms). A two-stage continuous hidden Markov\nmodel (HMM) algorithm was proposed to reduce the number of\nfeature subsets because it decomposed the complex activities\ninto several simpler ones [19]. Reiss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2525
    },
    {
      "id": "Q14",
      "question": "Which evaluation metrics or outcome measures are used to assess the predictive models?",
      "answer": "Accuracy, training time, test time.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        11,
        10,
        5
      ],
      "chunks_str": [
        " +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe same label, namely, ρr = corr(s∗\nt,s∗\nqˆyt ),r =1 ,2,...,q ˆyt\n(line 1). Ifρt <η is found, the classiﬁer will be rebuilt on the\nupdated training dataset{[s∗\ni;s∗\nt],[yi;nc +1]}, where the new\ntraining dataset includes the new inputs∗\nt with a new digital label\nnc +1 (line 3). In this article,η =0 .8.\nV. EXPERIMENTS AND RESULTS\nThree experiments were designed to validate the claims about\nthe Ada-HAR system in Section I. The ﬁrst experiment of the HC\nalgorithm evaluation aimed to compare the performance among\nML-based and DL-based HC classiﬁers. The second experiment\nwas to validate the evolution ability of the Ada-HAR system.\nThe demonstration revealed the identiﬁcation capability of Ada-\nHAR system in real time. The experiments have implemented\nthese methods in MATLAB 2018b with the hardware platform of\nIntel(R) i7 Core, 2.80-GHz CPU, and 16.0-GB RAM. A 64-bit\niPhone 6 s (2-core CPU) was utilized for collecting data with a\n50-Hz sampling frequency.\nA. HC Algorithm Evaluation\nTwenty-ﬁve subjects (13 females and 12 males, age range\n18–40 years old) were asked to perform the 12 original activities\ndescribed in Section I in a ﬁxed order (shown in Fig. 4). They\ncarried the smartphone on the waist or put it in their left pant\npocket, respectively. Finally, 50 datasets (25 datasets for each\nposition) were collected for further analysis.\nWe adopt the leave-one-out cross-validation strategy to vali-\ndate the performance of HC classiﬁers [40]. The length of the\ndetection window is 150 samples (3 s), and the overlap is 1 s\n(50 estimates). Table III reports a comparison of the average and\nstandard deviation in terms of the accuracy, training time, and\naverage test time among ML-based (i.e.,k-NN, DT, NB, ANN,\nand SVM) and DL-based (LSTM) HC classiﬁers. Meanwhile,\nall of the HC classiﬁers are evaluated on uncompressed and no-\ncompressed datasets. Although the LSTM-based HC classiﬁer\nobtains the highest accuracy, it is time-consuming for building\nthe model. Due to the SVM-based HC algorithm adopting the\nlinear kernel function, it takes more time to search the optimal\nsolution. In the same case, the k-NN-based approach is the\nfastest method to establish the HC classiﬁer, while the DT-based\nclassiﬁer is the fastest algorithm to predict the activity. Moreover,\nthe testing accuracy displays that putting the smartphone in the\npocket acquires more noises than carrying the smartphone on\nthe waist. The results for the",
        "Ld +Lo)=1 ,\n2: identify dynamic or static activity byˆyt = f1(X,θ1)\nbased on featureσ(∑ ||Sα|l|2));\n3: if ˆyt ∈ ΛD, identify a dynamical activity on featuresD\nor segments∗\nt;\n4: else ˆyt ∈ ΛS, identify a static activity on featuresS or\nsegment s∗\nt;\n5: end if\n6: end while\nFor accuracy enhancement, the SVM model commonly utilizes\nthe radial basis function kernel and linear kernel commonly.\nAs a standard RNN method, the LSTM algorithm learns the\nlong-term dependencies based on the three gates, namely an\ninput gate, a forget gate to allow the LSTM unit to unlearn the\nprevious memory, and an output gate to decide the quantity of\nmemory transferring to the next hidden layers. However, it will\ncost ample time to optimize the parameters of the LSTM network\nand predict a result.\nC. Recognition Module\nFig. 5 shows the details of the communication network for\nmonitoring daily human activities in real time with a local LAN\nand a remote LAN. Algorithm 3 describes the procedure for\nidentifying human activities. When a new inputst is divided as a\ndynamical or static activity by the ﬁrst classiﬁerˆyt = f1(X,θ1)\n(line 1), it will be further identiﬁed as a dynamical or a static\nactivity by the second or third classiﬁer (lines 3 and 4).\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n420 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nAlgorithm 4: The online learning algorithm.\nInput: the old HC classiﬁersf(X,θ) and new predicted\ninput {s∗\nt,ˆyt};\nOutput: the updated HC classiﬁersˆf(X, ˆθ);\n1: compute covariance coefﬁcients ρr = corr(s∗\nt,s∗\nqˆyt );\n2: if ρr ≥ η\n3: update training dataset {[s∗\ni;s∗\nt],[yi;nc +1]};\n4: if ˆyt ∈ ΛD\n5: retrain the second classiﬁer ˆf2(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n6: else ˆyt ∈ ΛS\n7: retrain the third classiﬁer ˆf3(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe",
        " ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label the activities au-\ntonomously. The HC [7] algorithms are used to establish the\nclassiﬁer for recognizing the 12 original activities (described in\nSection I). In the recognition module, the obtained HC classiﬁer\nis implemented for HAR in real time by carrying a smartphone\non the waist or putting it in the left pant pocket. In the online\nlearning module, a new activity that is not included in the 12\noriginal activities will be identiﬁed in an unsupervised learning\nmanner. Meanwhile, the old classiﬁer is updated. The signal\npreprocessing and feature extraction models are shared in both\ncreation and recognition modules.\nA. Signal Preprocessing and Feature Extraction\nThe collected signals typically exhibit various turbulence\n(e.g., magnetic ﬁelds and movement artifact), which affects the\nrecognition ability of the classiﬁer. The derived sensors signals\n(e.g., gravity and linear acceleration) that are transferred by the\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 417\nFig. 3. Schematic diagram of signal preprocessing model. The 9-D raw signals [Sα (accelerometer), Sβ (gyroscope), andSγ (magnetometer)] are processed\nby the L1-norm (Manhattan distance) transfer, third-order zero phases low-pass elliptical ﬁlter (LPEF), attitude and heading reference system algorithm (AHRS\nﬁlter), and sum of gyroscope signals algorithms to provide the inputs, namely, the linear L1 norm acceleration|Sα|l, YZ-axis L1 norm orientation|S⊖ YZ |,s u m\nof gyroscope\n∑\nSβ, and L1-norm accelerometer signals|Sα|.\noriginal IMU sensors, i.e.,Sα (accelerometer), Sβ (gyroscope),\nand Sγ (magnetometer), can solve the problems.\nFirst, the linear L1-norm accelerometer|Sα| [by (4)] can ﬁx\nthe three axes of acceleration for overcoming the inﬂuence of\nthe changes in direction and position\n||Sα|| =\nLd∑\ni=1\n|sαi | (4)\nwhere sα is the subsegment of Sα with Ld length. Then, a\nthird-order zero phase low-pass elliptical ﬁlter (LPEF) [31] is\nimplemented to decompose|Sα| into the gravity and the linear\nacceleration (|Sα|l) vectors to remove the high-order noises.\nSecond, the attitude and heading reference system algo-\nrithm (AHRS ﬁlter) [32] calculates the orientation axesS⊖ and\ndetermine the smartphone’s reference system to increase the\nidentiﬁcation ability"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2463
    },
    {
      "id": "Q15",
      "question": "What considerations were given to selected evaluation metrics or outcome measures in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        3,
        10,
        18
      ],
      "chunks_str": [
        "iss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions was strongly dependent on the extracted\nfeatures from the used sensors. Different features were utilized\nfor achieving several kinds of HAR problems [22]. An efﬁcient\ngroup-based context-aware classiﬁcation method has been pro-\nposed to improve the classiﬁcation performance by exploiting\nhierarchical group-based scheme and context awareness rather\nthan the intensive computation [23].\nRecently, the advancement of HAR with inertial measurement\nunit (IMU) sensor broadly adopts DL algorithms. Ronao and\nCho [24] designed a three-(and four-) layer convolutional neural\nnetworks (CNN) with the short-time fast Fourier transform\nmethod for classifying six activities with a high classiﬁcation\naccuracy by comparing with the traditional ML algorithms, i.e.,\nNB, ANN, and j48 decision tree (DT). Hammerlaet al. [25]\nproved that bidirectional long short-term memory (Bi-LSTM)\nobtained more accurate results than deep NN, CNN, and other\nrecurrent neural network (RNN) by testing on three public\ndatasets. Although the DL-based approaches were widely known\nto extract features automatically, they were affected by the\nselected sensors. Wang et al. [8] compared the performance\nobtained using different inertial sensors in a smartphone. Using\nboth accelerometer and gyroscope was demonstrated to yield\naccuracy enhancement. In our previous work, we compared\nthe recognition rate for identifying 12 activities by using dif-\nferent combined sensors, such as accelerometer, gyroscope,\nmagnetometer, and orientation. By combining accelerometer,\ngyroscope, and direction, the designed deep CNN model could\nobtain high accuracy [26], [27]. The results proved that adopting\ntransferred signals and more sensors can perform the results.\nMoreover, the DL-based methods were time-consuming for\nclassiﬁer evolution in a dynamic situation [28].\nIII. PROBLEM STATEMENT\nThe following notations describe the data stream of the Ada-\nHAR system through training, testing, and updating procedures,\nas shown in Fig. 1. The embedded IMU sensors in a smartphone\ncan provide nine-dimensional (9-D) raw signalsS, including\nacceleration, magnetism, and angular velocity [29].S can be\ndivided into M segments, namely sp,p =1 ,2,...,M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile,",
        "Ld +Lo)=1 ,\n2: identify dynamic or static activity byˆyt = f1(X,θ1)\nbased on featureσ(∑ ||Sα|l|2));\n3: if ˆyt ∈ ΛD, identify a dynamical activity on featuresD\nor segments∗\nt;\n4: else ˆyt ∈ ΛS, identify a static activity on featuresS or\nsegment s∗\nt;\n5: end if\n6: end while\nFor accuracy enhancement, the SVM model commonly utilizes\nthe radial basis function kernel and linear kernel commonly.\nAs a standard RNN method, the LSTM algorithm learns the\nlong-term dependencies based on the three gates, namely an\ninput gate, a forget gate to allow the LSTM unit to unlearn the\nprevious memory, and an output gate to decide the quantity of\nmemory transferring to the next hidden layers. However, it will\ncost ample time to optimize the parameters of the LSTM network\nand predict a result.\nC. Recognition Module\nFig. 5 shows the details of the communication network for\nmonitoring daily human activities in real time with a local LAN\nand a remote LAN. Algorithm 3 describes the procedure for\nidentifying human activities. When a new inputst is divided as a\ndynamical or static activity by the ﬁrst classiﬁerˆyt = f1(X,θ1)\n(line 1), it will be further identiﬁed as a dynamical or a static\nactivity by the second or third classiﬁer (lines 3 and 4).\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n420 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nAlgorithm 4: The online learning algorithm.\nInput: the old HC classiﬁersf(X,θ) and new predicted\ninput {s∗\nt,ˆyt};\nOutput: the updated HC classiﬁersˆf(X, ˆθ);\n1: compute covariance coefﬁcients ρr = corr(s∗\nt,s∗\nqˆyt );\n2: if ρr ≥ η\n3: update training dataset {[s∗\ni;s∗\nt],[yi;nc +1]};\n4: if ˆyt ∈ ΛD\n5: retrain the second classiﬁer ˆf2(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n6: else ˆyt ∈ ΛS\n7: retrain the third classiﬁer ˆf3(X, ˆθ) on\n{F[s∗\ni;s∗\nt],[yi;nc +1]} (ML-based) or\n{[s∗\ni;s∗\nt],[yi;nc +1]} (DL-based);\n8: end if\n9: else continue end if\nD. Online Learning Module\nThe online learning module aims to update the previous HC\nclassiﬁer when a new activity is found. An unsupervised learning\napproach (Algorithm 4) is proposed to measure the similarity\ndegree between the new inputss∗\nt and saved training datasets∗\nqk.\nWhen the predicted activityˆyt is available, the similarity mea-\nsurement mechanism will compute the correlation coefﬁcients\nρ sequentially between s∗\nt and the saved training sets∗\nqˆyt with\nthe",
        " inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu, “Seeker optimization algorithm for digital\nIIR ﬁlter design,”IEEE Trans. Ind. Electron., vol. 57, no. 5, pp. 1710–1718,\nMay 2009.\n[36] N. M. Hewahi and M. K. Saad, “Class outliers mining: Distance-based\napproach.” Int. J. Intell. Syst. Techn., vol. 2, no. 1, pp. 55–68, 2007.\n[37] A. Liaw et al., “Classiﬁcation and regression by randomforest,”RN e w s,\nvol. 2, no. 3, pp. 18–22, 2002.\n[38] S. D. Jadhav and H. Channe, “Comparative study of k-NN, Naive Bayes\nand decision tree classiﬁcation techniques,”Int. J. Sci. Res., vol. 5, no. 1,\npp. 1842–1845, 2016.\n[39] S. J. Russell and P. Norvig,Artiﬁcial Intelligence: A Modern Approach.\nMalaysia: Pearson Education Limited, 2016.\n[40] Y . Wang, X. Jia, Q. Jin, and J. Ma, “Mobile crowdsourcing: framework,\nchallenges, and solutions,”Concurrency Comput.: Practice Experience,\nvol. 29, no. 3, 2017, Art. no. e3789.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. "
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2199
    },
    {
      "id": "Q16",
      "question": "How were robustness, confidence or statistical significance of the results assessed in this study?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        5,
        18,
        17
      ],
      "chunks_str": [
        " ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label the activities au-\ntonomously. The HC [7] algorithms are used to establish the\nclassiﬁer for recognizing the 12 original activities (described in\nSection I). In the recognition module, the obtained HC classiﬁer\nis implemented for HAR in real time by carrying a smartphone\non the waist or putting it in the left pant pocket. In the online\nlearning module, a new activity that is not included in the 12\noriginal activities will be identiﬁed in an unsupervised learning\nmanner. Meanwhile, the old classiﬁer is updated. The signal\npreprocessing and feature extraction models are shared in both\ncreation and recognition modules.\nA. Signal Preprocessing and Feature Extraction\nThe collected signals typically exhibit various turbulence\n(e.g., magnetic ﬁelds and movement artifact), which affects the\nrecognition ability of the classiﬁer. The derived sensors signals\n(e.g., gravity and linear acceleration) that are transferred by the\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\nQI et al.: SMARTPHONE-BASED ADAPTIVE RECOGNITION AND REAL-TIME MONITORING SYSTEM FOR HUMAN ACTIVITIES 417\nFig. 3. Schematic diagram of signal preprocessing model. The 9-D raw signals [Sα (accelerometer), Sβ (gyroscope), andSγ (magnetometer)] are processed\nby the L1-norm (Manhattan distance) transfer, third-order zero phases low-pass elliptical ﬁlter (LPEF), attitude and heading reference system algorithm (AHRS\nﬁlter), and sum of gyroscope signals algorithms to provide the inputs, namely, the linear L1 norm acceleration|Sα|l, YZ-axis L1 norm orientation|S⊖ YZ |,s u m\nof gyroscope\n∑\nSβ, and L1-norm accelerometer signals|Sα|.\noriginal IMU sensors, i.e.,Sα (accelerometer), Sβ (gyroscope),\nand Sγ (magnetometer), can solve the problems.\nFirst, the linear L1-norm accelerometer|Sα| [by (4)] can ﬁx\nthe three axes of acceleration for overcoming the inﬂuence of\nthe changes in direction and position\n||Sα|| =\nLd∑\ni=1\n|sαi | (4)\nwhere sα is the subsegment of Sα with Ld length. Then, a\nthird-order zero phase low-pass elliptical ﬁlter (LPEF) [31] is\nimplemented to decompose|Sα| into the gravity and the linear\nacceleration (|Sα|l) vectors to remove the high-order noises.\nSecond, the attitude and heading reference system algo-\nrithm (AHRS ﬁlter) [32] calculates the orientation axesS⊖ and\ndetermine the smartphone’s reference system to increase the\nidentiﬁcation ability",
        " inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu, “Seeker optimization algorithm for digital\nIIR ﬁlter design,”IEEE Trans. Ind. Electron., vol. 57, no. 5, pp. 1710–1718,\nMay 2009.\n[36] N. M. Hewahi and M. K. Saad, “Class outliers mining: Distance-based\napproach.” Int. J. Intell. Syst. Techn., vol. 2, no. 1, pp. 55–68, 2007.\n[37] A. Liaw et al., “Classiﬁcation and regression by randomforest,”RN e w s,\nvol. 2, no. 3, pp. 18–22, 2002.\n[38] S. D. Jadhav and H. Channe, “Comparative study of k-NN, Naive Bayes\nand decision tree classiﬁcation techniques,”Int. J. Sci. Res., vol. 5, no. 1,\npp. 1842–1845, 2016.\n[39] S. J. Russell and P. Norvig,Artiﬁcial Intelligence: A Modern Approach.\nMalaysia: Pearson Education Limited, 2016.\n[40] Y . Wang, X. Jia, Q. Jin, and J. Ma, “Mobile crowdsourcing: framework,\nchallenges, and solutions,”Concurrency Comput.: Practice Experience,\nvol. 29, no. 3, 2017, Art. no. e3789.\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. ",
        " 2017.\n[23] L. Cao, Y . Wang, B. Zhang, Q. Jin, and A. V . Vasilakos, “Gchar: An efﬁcient\ngroup-based contextaware human activity recognition on smartphone,”J.\nParallel Distrib. Comput., vol. 118, pp. 67–80, 2018.\n[24] C. A. Ronao and S.-B. Cho, “Human activity recognition with smartphone\nsensors using deep learning neural networks,”Expert Syst. Appl., vol. 59,\npp. 235–244, 2016.\n[25] N. Y . Hammerla, S. Halloran, and T. Ploetz, “Deep, convolutional, and\nrecurrent models for human activity recognition using wearables,” 2016,\narXiv:1604.08880.\n[26] W. Qi, H. Su, C. Yang, G. Ferrigno, E. De Momi, and A. Aliverti,\n“A fast and robust deep convolutional neural networks for complex\nhuman activity recognition using smartphone,”Sensors, vol. 19, 2019,\nArt. no. 3731.\n[27] W. Qi and A. Aliverti, “A multimodal wearable system for continuous\nand real-time breathing pattern monitoring during daily activity,”IEEE J.\nBiomed. Health Inform., 2019.\n[28] Y . Liang, Z. Cai, J. Yu, Q. Han, and Y . Li, “Deep learning based inference\nof private information using embedded sensors in smart devices,”IEEE\nNetw., vol. 32, no. 4, pp. 8–14, Jul./Aug. 2018.\n[29] O. Särkkä, T. Nieminen, S. Suuriniemi, and L. Kettunen, “A multi-position\ncalibration method for consumer-grade accelerometers, gyroscopes, and\nmagnetometers to ﬁeld conditions,” IEEE Sensors J., vol. 17, no. 11,\npp. 3470–3481, Jun. 2017.\n[30] J. O. Laguna, A. G. Olaya, and D. Borrajo, “A dynamic sliding window\napproach for activity recognition,” inProc. Int. Conf. User Model., Adap-\ntation, Personalization, 2011, pp. 219–230.\n[31] P. Kanjiya, V . M. Khadkikar, and M. S. ElMoursi, “Adaptive low-pass ﬁlter\nbased dc offset removal technique for three-phase PLLs,”IEEE Trans. Ind.\nElectron., vol. 65, no. 11, pp. 9025–9029, Nov. 2018.\n[32] D. Roetenberg, H. J. Luinge, C. T. Baten, and P. H. Veltink, “Compensation\nof magnetic disturbances improves inertial and magnetic sensing of human\nbody segment orientation,”IEEE Trans. Neural Syst. Rehabil. Eng., vol. 13,\nno. 3, pp. 395–405, Sep. 2005.\n[33] A. Rai and S. Upadhyay, “Bearing performance degradation assess-\nment based on a combination of empirical mode decomposition and\nk-medoids clustering,” Mech. Syst. Signal Process., vol. 93, pp. 16–29,\n2017.\n[34] R. Boddy and G. Smith,Statistical Methods in Practice: For Scientists\nand Technologists. Chichester, U.K.: Wiley, 2009.\n[35] C. Dai, W. Chen, and Y . Zhu"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2239
    },
    {
      "id": "Q17",
      "question": "What limitations of the study were discussed?",
      "answer": "Unknown from this paper.",
      "raw_answer": null,
      "choices_ids": null,
      "answer_label": null,
      "chunks_id": [
        3,
        4,
        6
      ],
      "chunks_str": [
        "iss et al. [20] found that\nthe ConfAdaBoost.M1 ensemble algorithm could obtain a high\nrecognition accuracy, but it was necessary to extract 561 features.\nNoor et al.[21] introduced an adaptive sliding window approach\nto recognize physical activity by computing the probability of\nsignals with an adjustable window length. All of the above\ncontributions were limited by the length of the detected signal\nsegments. Some of them focused on a short segment, which\ncannot express a whole activity. Some of them detected on the\nlong signal segment, which affected misclassiﬁcation due to a\nsegment including many activities. Hence, it is essential to ﬁnd a\nsuitable data length for classiﬁcation. However, the performance\nof ML-based solutions was strongly dependent on the extracted\nfeatures from the used sensors. Different features were utilized\nfor achieving several kinds of HAR problems [22]. An efﬁcient\ngroup-based context-aware classiﬁcation method has been pro-\nposed to improve the classiﬁcation performance by exploiting\nhierarchical group-based scheme and context awareness rather\nthan the intensive computation [23].\nRecently, the advancement of HAR with inertial measurement\nunit (IMU) sensor broadly adopts DL algorithms. Ronao and\nCho [24] designed a three-(and four-) layer convolutional neural\nnetworks (CNN) with the short-time fast Fourier transform\nmethod for classifying six activities with a high classiﬁcation\naccuracy by comparing with the traditional ML algorithms, i.e.,\nNB, ANN, and j48 decision tree (DT). Hammerlaet al. [25]\nproved that bidirectional long short-term memory (Bi-LSTM)\nobtained more accurate results than deep NN, CNN, and other\nrecurrent neural network (RNN) by testing on three public\ndatasets. Although the DL-based approaches were widely known\nto extract features automatically, they were affected by the\nselected sensors. Wang et al. [8] compared the performance\nobtained using different inertial sensors in a smartphone. Using\nboth accelerometer and gyroscope was demonstrated to yield\naccuracy enhancement. In our previous work, we compared\nthe recognition rate for identifying 12 activities by using dif-\nferent combined sensors, such as accelerometer, gyroscope,\nmagnetometer, and orientation. By combining accelerometer,\ngyroscope, and direction, the designed deep CNN model could\nobtain high accuracy [26], [27]. The results proved that adopting\ntransferred signals and more sensors can perform the results.\nMoreover, the DL-based methods were time-consuming for\nclassiﬁer evolution in a dynamic situation [28].\nIII. PROBLEM STATEMENT\nThe following notations describe the data stream of the Ada-\nHAR system through training, testing, and updating procedures,\nas shown in Fig. 1. The embedded IMU sensors in a smartphone\ncan provide nine-dimensional (9-D) raw signalsS, including\nacceleration, magnetism, and angular velocity [29].S can be\ndivided into M segments, namely sp,p =1 ,2,...,M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile,",
        ",M ,b yt h e\nsliding window method [30]. The segments can be labeled\nin a supervised manner as {sp,yp},p =1 ,2,...,M . A data\ncompression model is adopted to remove the similar segments\nfrom {sp,yp} with the same labels. The compressed datasets\n{si,yi},i =1 ,2,...,N (usually,N ≤ M) can be processed by\nthe signal preprocessing model for information enhancement as\n{s∗\ni,yi}. The proposed Ada-HAR system can build the classiﬁer\nf(X,θ)based on random ML or DL algorithms. The inputXcan\nbe either the extracted featuresFhs∗ or the processed signalss∗.\nMeanwhile, the dataset{s∗\ni,yi}will be reconstructed as a basic\ndataset s∗\nqk,k =1 ,2,...,n c;q ∈ R+ (where nc is the number\nof classes andqk is the label), for comparing with new activity.\nIn the testing procedure, the classiﬁer predicts a current ac-\ntivity ˆyt based on the extracted featureFhs∗\nt (ML-based) or the\nprocessed signals∗\nt (DL-based). The classiﬁcation errorεcan be\ncalculated through a supervised learning strategy by comparing\nˆyt with real labelyt as follows:\nε(s,y,X )= 1\nN\nN∑\nt=1\n[yt ̸= f(X,θ)] (1)\nwhere\n[yt ̸= f(X,θ)] =\n{\n1,y t ̸= f(X,θ)\n0,y t = f(X,θ) . (2)\nLet Θbe the overall set of classiﬁer parameters. The Ada-HAR\nsystem aims to ﬁnd the optimal parameter setθvia the following\nAuthorized licensed use limited to: Universiteit Leiden. Downloaded on May 13,2025 at 14:01:28 UTC from IEEE Xplore.  Restrictions apply. \n\n416 IEEE TRANSACTIONS ON HUMAN-MACHINE SYSTEMS, VOL. 50, NO. 5, OCTOBER 2020\nFig. 1. Data stream of Ada-HAR system. It includes training (blue line), testing (orange line), and updating (light tan line) procedures.\nFig. 2. Architecture of the adaptive real-time human activity recognition monitoring system (Ada-HAR). It includes a creation module IV(B) to labelactivities\nand builds the classiﬁer, a recognition module IV(C) to predict human activity in an online manner, and an online learning module IV(D) to update the classiﬁer in\nan unsupervised manner. Boxes with the same color adopt the same algorithms, such as the feature extraction (classiﬁcation) model in the creation andrecognition\nmodules. The shaded part is Section IV(A): Signal preprocessing and feature extraction.\nequation:\narg min\nθ∈Θ\nε(s,y,X ). (3)\nIn the updating procedure, the new processed input s∗\nt is\ncompared with the training datasets∗\nqˆyt\nby calculating the corre-\nlation coefﬁcientρ = corr(s∗\nt,s∗\nqˆyt\n).I fρ<η (we setη =0 .8),\nthe Ada-HAR system will retrain the classiﬁer on the updated\ntraining dataset{[s∗\ni;s∗\nt],[yi;nc +1]}.\nIV . METHODOLOGY\nFig. 2 shows the proposed Ada-HAR system with cre-\nation, recognition, and online learning modules. In the creation\nmodule, the Hk-mC [6] is adopted to label",
        " three axes of acceleration for overcoming the inﬂuence of\nthe changes in direction and position\n||Sα|| =\nLd∑\ni=1\n|sαi | (4)\nwhere sα is the subsegment of Sα with Ld length. Then, a\nthird-order zero phase low-pass elliptical ﬁlter (LPEF) [31] is\nimplemented to decompose|Sα| into the gravity and the linear\nacceleration (|Sα|l) vectors to remove the high-order noises.\nSecond, the attitude and heading reference system algo-\nrithm (AHRS ﬁlter) [32] calculates the orientation axesS⊖ and\ndetermine the smartphone’s reference system to increase the\nidentiﬁcation ability on static activities. Instead of tracking the\norientation directly, the indirect Kalman ﬁlter models the error\nprocess x with a recursive update as follows:\nxt =\n⎡\n⎢⎢⎢⎣\nS⊖ t\nSαt\nSβt\nSγt\n⎤\n⎥⎥⎥⎦ = Ft\n⎡\n⎢⎢⎢⎣\nS⊖ t−1\nSαt−1\nSβt−1\nSγt−1\n⎤\n⎥⎥⎥⎦ +ωt (5)\nwhere the 12-by-1 vector xt is the output at time t, con-\nsisting of the original three sensors and the orientation com-\nposition S⊖ t . ωt is 12-by-1 additive noise vector and Ft is\nthe state transition model. Third, the sum of angular velocity,\nnamely ∑ Sβ = Sβx +Sβy +Sβz , can extract more dynamical\ninformation.\nFor accuracy enhancement, we select parts of the sig-\nnals as the outputs of signal preprocessing model. They are\nthe tri-axial linear L1 norm acceleration (|Sα|l), YZ-axis L1\nnorm orientation ( |S⊖ YZ |), the sum of gyroscope signals\n(∑ Sβ), and the L1-norm accelerometer (|Sα|), namely S∗ =\n[|Sα|l;|S⊖ YZ |;|S⊖ YZ |;∑ Sβ|Sα|] (shown in Fig. 3).\nIn addition, it is better to extract effective features (Table I)\nfor building an ML-based classiﬁer and divide them into a\ndynamical set D, a static set S, and a single feature D/S :\nTABLE I\nTHE EXTRACTED FEATURES INTIME DOMAIN\nσ(∑ ||Sα|l|2))for establishing an HC classiﬁer.|Sα|l and ∑ Sβ\nare used to provide dynamical features, while|S⊖ YZ | and |Sα|\nare selected to compute the static features. The meanings of\nthe symbols are as follows: Standard deviationσ, average (e.g.,\n¯∑ Sβ), maximummax, minimummin, difference (recurrence\nrelation) ▽ , and the whole numbers (N).\nB. Creation Module\nThe creation module includes two steps: One aims to achieve\nautomatic labeling using the Hk-mC algorithm, and the other\none is to build the HC classiﬁer for HAR. The Hk-mC algo-\nrithm 1 is implemented in an unsupervised manner with the\nﬁxed structure. It labels the extracted features setFmjj\ns∗p\n,jj =\n1,2,...,Ly m computed on the processed segments s"
      ],
      "sent_transformer": "kamalkraj/BioSimCSE-BioLinkBERT-BASE",
      "LLM": "deepseek/deepseek-chat-v3.1:free",
      "finish_reason": "stop",
      "total_len": 2459
    }
  ]
}